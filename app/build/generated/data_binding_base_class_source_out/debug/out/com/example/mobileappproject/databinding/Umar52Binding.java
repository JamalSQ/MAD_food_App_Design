// Generated by view binder compiler. Do not edit!
package com.example.mobileappproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mobileappproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Umar52Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView bentoImage;

  @NonNull
  public final TextView bentoPrice;

  @NonNull
  public final Button btnUmar52;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final LinearLayout linearLayout4;

  private Umar52Binding(@NonNull ConstraintLayout rootView, @NonNull ImageView bentoImage,
      @NonNull TextView bentoPrice, @NonNull Button btnUmar52, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout linearLayout2, @NonNull LinearLayout linearLayout3,
      @NonNull LinearLayout linearLayout4) {
    this.rootView = rootView;
    this.bentoImage = bentoImage;
    this.bentoPrice = bentoPrice;
    this.btnUmar52 = btnUmar52;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.linearLayout4 = linearLayout4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Umar52Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Umar52Binding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.umar_52, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Umar52Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bento_image;
      ImageView bentoImage = ViewBindings.findChildViewById(rootView, id);
      if (bentoImage == null) {
        break missingId;
      }

      id = R.id.bento_price;
      TextView bentoPrice = ViewBindings.findChildViewById(rootView, id);
      if (bentoPrice == null) {
        break missingId;
      }

      id = R.id.btnUmar52;
      Button btnUmar52 = ViewBindings.findChildViewById(rootView, id);
      if (btnUmar52 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      return new Umar52Binding((ConstraintLayout) rootView, bentoImage, bentoPrice, btnUmar52,
          linearLayout, linearLayout2, linearLayout3, linearLayout4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
