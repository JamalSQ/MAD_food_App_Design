// Generated by view binder compiler. Do not edit!
package com.example.mobileappproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mobileappproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegPgNo12Binding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final EditText editTextTextPassword;

  @NonNull
  public final EditText emailEditText;

  @NonNull
  public final TextView tvBtnPg12;

  @NonNull
  public final TextView tvDet;

  @NonNull
  public final TextView tvSignInn;

  private ActivityRegPgNo12Binding(@NonNull ScrollView rootView,
      @NonNull EditText editTextTextPassword, @NonNull EditText emailEditText,
      @NonNull TextView tvBtnPg12, @NonNull TextView tvDet, @NonNull TextView tvSignInn) {
    this.rootView = rootView;
    this.editTextTextPassword = editTextTextPassword;
    this.emailEditText = emailEditText;
    this.tvBtnPg12 = tvBtnPg12;
    this.tvDet = tvDet;
    this.tvSignInn = tvSignInn;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegPgNo12Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegPgNo12Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reg_pg_no12, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegPgNo12Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextTextPassword;
      EditText editTextTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPassword == null) {
        break missingId;
      }

      id = R.id.emailEditText;
      EditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.tvBtnPg12;
      TextView tvBtnPg12 = ViewBindings.findChildViewById(rootView, id);
      if (tvBtnPg12 == null) {
        break missingId;
      }

      id = R.id.tv_det;
      TextView tvDet = ViewBindings.findChildViewById(rootView, id);
      if (tvDet == null) {
        break missingId;
      }

      id = R.id.tv_SignInn;
      TextView tvSignInn = ViewBindings.findChildViewById(rootView, id);
      if (tvSignInn == null) {
        break missingId;
      }

      return new ActivityRegPgNo12Binding((ScrollView) rootView, editTextTextPassword,
          emailEditText, tvBtnPg12, tvDet, tvSignInn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
