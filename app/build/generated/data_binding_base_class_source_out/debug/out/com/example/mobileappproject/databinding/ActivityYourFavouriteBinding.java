// Generated by view binder compiler. Do not edit!
package com.example.mobileappproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mobileappproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityYourFavouriteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox heart;

  @NonNull
  public final CheckBox heart1;

  @NonNull
  public final CheckBox heart2;

  @NonNull
  public final ScrollView horizontalcardview;

  @NonNull
  public final TextView kilometertxt;

  @NonNull
  public final TextView kilometertxt1;

  @NonNull
  public final TextView kilometertxt2;

  @NonNull
  public final ImageView locationicon;

  @NonNull
  public final ImageView locationicon1;

  @NonNull
  public final ImageView locationicon2;

  @NonNull
  public final LinearLayout maincard;

  @NonNull
  public final TextView pricing;

  @NonNull
  public final TextView pricing1;

  @NonNull
  public final TextView pricing2;

  @NonNull
  public final LinearLayout recomendtext;

  @NonNull
  public final ImageView starrating;

  @NonNull
  public final ImageView starrating1;

  @NonNull
  public final ImageView starrating2;

  @NonNull
  public final TextView title;

  @NonNull
  public final TextView title1;

  @NonNull
  public final TextView title2;

  private ActivityYourFavouriteBinding(@NonNull ConstraintLayout rootView, @NonNull CheckBox heart,
      @NonNull CheckBox heart1, @NonNull CheckBox heart2, @NonNull ScrollView horizontalcardview,
      @NonNull TextView kilometertxt, @NonNull TextView kilometertxt1,
      @NonNull TextView kilometertxt2, @NonNull ImageView locationicon,
      @NonNull ImageView locationicon1, @NonNull ImageView locationicon2,
      @NonNull LinearLayout maincard, @NonNull TextView pricing, @NonNull TextView pricing1,
      @NonNull TextView pricing2, @NonNull LinearLayout recomendtext, @NonNull ImageView starrating,
      @NonNull ImageView starrating1, @NonNull ImageView starrating2, @NonNull TextView title,
      @NonNull TextView title1, @NonNull TextView title2) {
    this.rootView = rootView;
    this.heart = heart;
    this.heart1 = heart1;
    this.heart2 = heart2;
    this.horizontalcardview = horizontalcardview;
    this.kilometertxt = kilometertxt;
    this.kilometertxt1 = kilometertxt1;
    this.kilometertxt2 = kilometertxt2;
    this.locationicon = locationicon;
    this.locationicon1 = locationicon1;
    this.locationicon2 = locationicon2;
    this.maincard = maincard;
    this.pricing = pricing;
    this.pricing1 = pricing1;
    this.pricing2 = pricing2;
    this.recomendtext = recomendtext;
    this.starrating = starrating;
    this.starrating1 = starrating1;
    this.starrating2 = starrating2;
    this.title = title;
    this.title1 = title1;
    this.title2 = title2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityYourFavouriteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityYourFavouriteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_your_favourite, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityYourFavouriteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.heart;
      CheckBox heart = ViewBindings.findChildViewById(rootView, id);
      if (heart == null) {
        break missingId;
      }

      id = R.id.heart1;
      CheckBox heart1 = ViewBindings.findChildViewById(rootView, id);
      if (heart1 == null) {
        break missingId;
      }

      id = R.id.heart2;
      CheckBox heart2 = ViewBindings.findChildViewById(rootView, id);
      if (heart2 == null) {
        break missingId;
      }

      id = R.id.horizontalcardview;
      ScrollView horizontalcardview = ViewBindings.findChildViewById(rootView, id);
      if (horizontalcardview == null) {
        break missingId;
      }

      id = R.id.kilometertxt;
      TextView kilometertxt = ViewBindings.findChildViewById(rootView, id);
      if (kilometertxt == null) {
        break missingId;
      }

      id = R.id.kilometertxt1;
      TextView kilometertxt1 = ViewBindings.findChildViewById(rootView, id);
      if (kilometertxt1 == null) {
        break missingId;
      }

      id = R.id.kilometertxt2;
      TextView kilometertxt2 = ViewBindings.findChildViewById(rootView, id);
      if (kilometertxt2 == null) {
        break missingId;
      }

      id = R.id.locationicon;
      ImageView locationicon = ViewBindings.findChildViewById(rootView, id);
      if (locationicon == null) {
        break missingId;
      }

      id = R.id.locationicon1;
      ImageView locationicon1 = ViewBindings.findChildViewById(rootView, id);
      if (locationicon1 == null) {
        break missingId;
      }

      id = R.id.locationicon2;
      ImageView locationicon2 = ViewBindings.findChildViewById(rootView, id);
      if (locationicon2 == null) {
        break missingId;
      }

      id = R.id.maincard;
      LinearLayout maincard = ViewBindings.findChildViewById(rootView, id);
      if (maincard == null) {
        break missingId;
      }

      id = R.id.pricing;
      TextView pricing = ViewBindings.findChildViewById(rootView, id);
      if (pricing == null) {
        break missingId;
      }

      id = R.id.pricing1;
      TextView pricing1 = ViewBindings.findChildViewById(rootView, id);
      if (pricing1 == null) {
        break missingId;
      }

      id = R.id.pricing2;
      TextView pricing2 = ViewBindings.findChildViewById(rootView, id);
      if (pricing2 == null) {
        break missingId;
      }

      id = R.id.recomendtext;
      LinearLayout recomendtext = ViewBindings.findChildViewById(rootView, id);
      if (recomendtext == null) {
        break missingId;
      }

      id = R.id.starrating;
      ImageView starrating = ViewBindings.findChildViewById(rootView, id);
      if (starrating == null) {
        break missingId;
      }

      id = R.id.starrating1;
      ImageView starrating1 = ViewBindings.findChildViewById(rootView, id);
      if (starrating1 == null) {
        break missingId;
      }

      id = R.id.starrating2;
      ImageView starrating2 = ViewBindings.findChildViewById(rootView, id);
      if (starrating2 == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.title1;
      TextView title1 = ViewBindings.findChildViewById(rootView, id);
      if (title1 == null) {
        break missingId;
      }

      id = R.id.title2;
      TextView title2 = ViewBindings.findChildViewById(rootView, id);
      if (title2 == null) {
        break missingId;
      }

      return new ActivityYourFavouriteBinding((ConstraintLayout) rootView, heart, heart1, heart2,
          horizontalcardview, kilometertxt, kilometertxt1, kilometertxt2, locationicon,
          locationicon1, locationicon2, maincard, pricing, pricing1, pricing2, recomendtext,
          starrating, starrating1, starrating2, title, title1, title2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
