// Generated by view binder compiler. Do not edit!
package com.example.mobileappproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mobileappproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOrderDeliveringBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView iv1OD;

  @NonNull
  public final ImageView iv2OD;

  @NonNull
  public final LinearLayout llLine1;

  @NonNull
  public final LinearLayout llLine2;

  @NonNull
  public final TextView tv1;

  @NonNull
  public final TextView tv2;

  @NonNull
  public final TextView tvTitleOrderDelivering;

  private FragmentOrderDeliveringBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView iv1OD, @NonNull ImageView iv2OD, @NonNull LinearLayout llLine1,
      @NonNull LinearLayout llLine2, @NonNull TextView tv1, @NonNull TextView tv2,
      @NonNull TextView tvTitleOrderDelivering) {
    this.rootView = rootView;
    this.iv1OD = iv1OD;
    this.iv2OD = iv2OD;
    this.llLine1 = llLine1;
    this.llLine2 = llLine2;
    this.tv1 = tv1;
    this.tv2 = tv2;
    this.tvTitleOrderDelivering = tvTitleOrderDelivering;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOrderDeliveringBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOrderDeliveringBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_order_delivering, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOrderDeliveringBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv1OD;
      ImageView iv1OD = ViewBindings.findChildViewById(rootView, id);
      if (iv1OD == null) {
        break missingId;
      }

      id = R.id.iv2OD;
      ImageView iv2OD = ViewBindings.findChildViewById(rootView, id);
      if (iv2OD == null) {
        break missingId;
      }

      id = R.id.llLine1;
      LinearLayout llLine1 = ViewBindings.findChildViewById(rootView, id);
      if (llLine1 == null) {
        break missingId;
      }

      id = R.id.llLine2;
      LinearLayout llLine2 = ViewBindings.findChildViewById(rootView, id);
      if (llLine2 == null) {
        break missingId;
      }

      id = R.id.tv1;
      TextView tv1 = ViewBindings.findChildViewById(rootView, id);
      if (tv1 == null) {
        break missingId;
      }

      id = R.id.tv2;
      TextView tv2 = ViewBindings.findChildViewById(rootView, id);
      if (tv2 == null) {
        break missingId;
      }

      id = R.id.tvTitleOrderDelivering;
      TextView tvTitleOrderDelivering = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleOrderDelivering == null) {
        break missingId;
      }

      return new FragmentOrderDeliveringBinding((ConstraintLayout) rootView, iv1OD, iv2OD, llLine1,
          llLine2, tv1, tv2, tvTitleOrderDelivering);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
